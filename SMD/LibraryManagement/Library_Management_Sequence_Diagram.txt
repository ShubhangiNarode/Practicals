Here's a full **step-by-step guide** to create a **Sequence Diagram for Library Management System** in **StarUML**. The diagram will include:

‚úÖ **Objects**
‚úÖ **Synchronous & Asynchronous messages**
‚úÖ **Return messages**
‚úÖ **Interaction Fragments** (like `alt`, `opt`, `loop`)

---

### ‚öôÔ∏è **Step-by-Step in StarUML:**

#### üß© 1. **Create a Sequence Diagram**

* Open **StarUML**
* Go to: `Model` > `Add Diagram` > `Sequence Diagram`
* Rename the diagram to: `Library Management - Sequence Diagram`

---

#### üë• 2. **Add Lifelines (Objects / Participants)**

Use the **Lifeline Tool** and add these objects (top-to-bottom alignment):

1. `User`
2. `LoginService`
3. `LibrarySystem`
4. `BookDatabase`
5. `NotificationService`

---

#### üîÅ 3. **Add Messages (Use Synchronous & Asynchronous)**

##### ‚úÖ Login Use Case (Synchronous)

* From `User` to `LoginService`: `enterCredentials()`
  ‚Üí **Synchronous Message**
* From `LoginService` to `LibrarySystem`: `validateUser()`
  ‚Üí **Synchronous Message**
* From `LibrarySystem` back to `LoginService`: `loginSuccess()`
  ‚Üí **Return Message**
* From `LoginService` to `User`: `displayDashboard()`
  ‚Üí **Return Message**

---

##### ‚úÖ Search Book (Synchronous + Return)

* `User` to `LibrarySystem`: `searchBook(title)`
* `LibrarySystem` to `BookDatabase`: `fetchBookDetails()`
* `BookDatabase` to `LibrarySystem`: `bookInfo`
* `LibrarySystem` to `User`: `displayBookInfo()`

---

##### ‚úÖ Reserve Book (Asynchronous + Notification)

* `User` to `LibrarySystem`: `reserveBook(bookId)`
  ‚Üí **Synchronous**
* `LibrarySystem` to `NotificationService`: `sendReservationConfirmation()`
  ‚Üí **Asynchronous**
* `NotificationService` to `User`: `SMS: Reservation Confirmed`
  ‚Üí **Return Message**

---

#### üß© 4. **Add Interaction Fragments**

##### ‚ûï `alt` Fragment (If user valid or invalid)

* Drag **Interaction Operand (alt)** around `validateUser()`
* First block: `Valid Credentials`
* Second block: `Invalid Credentials` with `showError()`

##### ‚ûï `loop` Fragment (For search retries)

* Wrap the searchBook sequence in a **loop**
* Label: `While book not found`

##### ‚ûï `opt` Fragment (If book available)

* Wrap `reserveBook` + `sendConfirmation` in **opt**
* Label: `If Book Available`

---

#### üí° 5. **Focus of Control**

StarUML shows **activation boxes** automatically when you create messages (these indicate control/focus).

---

### üßæ Example Messages Summary

| From          | To                  | Message                       | Type         |
| ------------- | ------------------- | ----------------------------- | ------------ |
| User          | LoginService        | enterCredentials()            | Synchronous  |
| LoginService  | LibrarySystem       | validateUser()                | Synchronous  |
| LibrarySystem | LoginService        | loginSuccess()                | Return       |
| User          | LibrarySystem       | searchBook(title)             | Synchronous  |
| LibrarySystem | BookDatabase        | fetchBookDetails()            | Synchronous  |
| BookDatabase  | LibrarySystem       | bookInfo                      | Return       |
| LibrarySystem | NotificationService | sendReservationConfirmation() | Asynchronous |

---

Would you like me to generate a **diagram image** based on this layout?
