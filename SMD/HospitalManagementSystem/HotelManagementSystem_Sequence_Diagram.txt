Sure! Below is a complete **step-by-step guide** to create a **Sequence Diagram for a Hotel Management System** in **StarUML**. The diagram includes:

‚úÖ Objects
‚úÖ Synchronous & Asynchronous Messages
‚úÖ Return Messages
‚úÖ Interaction Fragments (`alt`, `opt`, `loop`)
‚úÖ Focus of Control (automatic in StarUML)

---

### ‚öôÔ∏è **Step-by-Step in StarUML**

#### üß© 1. **Create a Sequence Diagram**

* Open **StarUML**
* Go to: `Model` > `Add Diagram` > `Sequence Diagram`
* Rename the diagram: **Hotel Management - Sequence Diagram**

---

#### üë• 2. **Add Lifelines (Objects / Participants)**

Use the **Lifeline Tool** to add:

1. `Guest`
2. `Receptionist`
3. `HotelSystem`
4. `RoomDatabase`
5. `PaymentService`
6. `NotificationService`

---

#### üîÅ 3. **Add Messages (With Synchronization)**

---

##### ‚úÖ **Check Room Availability (Synchronous)**

* `Guest` ‚Üí `Receptionist`: `requestRoomAvailability()`
* `Receptionist` ‚Üí `HotelSystem`: `checkAvailability(date, type)`
* `HotelSystem` ‚Üí `RoomDatabase`: `getAvailableRooms()`
* `RoomDatabase` ‚Üí `HotelSystem`: `availableRooms`
* `HotelSystem` ‚Üí `Receptionist`: `showAvailableRooms()`
* `Receptionist` ‚Üí `Guest`: `displayRooms()`

---

##### ‚úÖ **Room Booking (Includes opt & async)**

* `Guest` ‚Üí `Receptionist`: `bookRoom(roomId, date)`
* `Receptionist` ‚Üí `HotelSystem`: `createBooking()`
* `HotelSystem` ‚Üí `PaymentService`: `initiatePayment()`
* `PaymentService` ‚Üí `HotelSystem`: `paymentStatus()` (return)
* `HotelSystem` ‚Üí `NotificationService`: `sendConfirmationSMS()`
  ‚Üí **Asynchronous Message**
* `NotificationService` ‚Üí `Guest`: `SMS Confirmation`
  ‚Üí **Return Message**

---

#### üß© 4. **Add Interaction Fragments**

---

##### üîÑ **loop** ‚Äì Retry if room not available

* Wrap `checkAvailability` inside a **loop**
* Guard condition: `while rooms not available`

---

##### ‚ûï **alt** ‚Äì Payment success/failure

* Add **alt** fragment around `paymentStatus()`

  * **Option 1:** Payment Success ‚Üí proceed with booking
  * **Option 2:** Payment Failed ‚Üí `showError()`

---

##### ‚ûï **opt** ‚Äì Send Confirmation only if booking successful

* Add **opt** fragment for sending confirmation SMS
* Guard: `[if booking confirmed]`

---

### üßæ Summary of Message Types

| From                | To                  | Message                   | Type        |
| ------------------- | ------------------- | ------------------------- | ----------- |
| Guest               | Receptionist        | requestRoomAvailability() | Synchronous |
| Receptionist        | HotelSystem         | checkAvailability()       | Synchronous |
| HotelSystem         | RoomDatabase        | getAvailableRooms()       | Synchronous |
| Guest               | Receptionist        | bookRoom()                | Synchronous |
| HotelSystem         | PaymentService      | initiatePayment()         | Synchronous |
| PaymentService      | HotelSystem         | paymentStatus()           | Return      |
| HotelSystem         | NotificationService | sendConfirmationSMS()     | **Async**   |
| NotificationService | Guest               | SMS Confirmation          | Return      |

---

### ‚ú≥Ô∏è Focus of Control

* StarUML automatically adds the **Focus of Control** box when you draw messages between lifelines.
* This helps show which object is currently processing or handling a request.

---

Would you like me to create this diagram as an image as well?
